name: 🏷 Title Labeler
on:
  pull_request:
    types: [opened, edited, synchronize]
  issues:
    types: [opened, edited]

jobs:
  label-by-title:
    runs-on: ubuntu-latest
    steps:
      - name: Add labels from title (PR)
        if: github.event_name == 'pull_request'
        uses: actions/github-script@v7
        with:
          script: |
            const title = context.payload.pull_request.title;
            const map = [
              [/^\s*\[?FEAT\]?/i, 'feat'],
              [/^\s*\[?FIX\]?/i, 'fix'],
              [/^\s*\[?CHORE\]?/i, 'chore'],
              [/^\s*\[?DOCS?\]?/i, 'docs'],
              [/^\s*\[?REFACTOR\]?/i, 'refactor'],
              [/^\s*\[?TEST\]?/i, 'test'],
              [/^\s*\[?BUILD\]?/i, 'build'],
              [/^\s*\[?HOTFIX\]?/i, 'hotfix'],
            ];
            const labels = map.filter(([r]) => r.test(title)).map(([,l]) => l);
            if (labels.length) {
              await github.rest.issues.addLabels({
                owner: context.repo.owner,
                repo: context.repo.repo,
                issue_number: context.payload.pull_request.number,
                labels
              });
            }
      - name: Add labels from title (Issue)
        if: github.event_name == 'issues'
        uses: actions/github-script@v7
        with:
          script: |
            const title = context.payload.issue.title;
            const map = [
              [/^\s*\[?FEAT\]?/i, 'feat'],
              [/^\s*\[?FIX\]?/i, 'fix'],
              [/^\s*\[?CHORE\]?/i, 'chore'],
              [/^\s*\[?DOCS?\]?/i, 'docs'],
              [/^\s*\[?REFACTOR\]?/i, 'refactor'],
              [/^\s*\[?TEST\]?/i, 'test'],
              [/^\s*\[?BUILD\]?/i, 'build'],
              [/^\s*\[?HOTFIX\]?/i, 'hotfix'],
            ];
            const labels = map.filter(([r]) => r.test(title)).map(([,l]) => l);
            if (labels.length) {
              await github.rest.issues.addLabels({
                owner: context.repo.owner,
                repo: context.repo.repo,
                issue_number: context.payload.issue.number,
                labels
              });
            }
